apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -o .k8s
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: elasticsearch
  name: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: elasticsearch
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -o .k8s
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/elastic: "true"
        io.kompose.service: elasticsearch
    spec:
      containers:
        - env:
            - name: ELASTIC_CLUSTER_NAME
            - name: ELASTIC_DISCOVERY_SEEDS
            - name: ELASTIC_INIT_MASTER_NODE
            - name: ELASTIC_NODE_NAME
            - name: ELASTIC_PASSWORD
            - name: ELASTIC_USERNAME
            - name: ES_JAVA_OPTS
              value: -Xmx -Xms -Des.enforce.bootstrap.checks=true -Dlog4j2.formatMsgNoLookups=true
            - name: bootstrap.memory_lock
              value: "true"
          image: 'elastdocker/elasticsearch:'
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - curl -sf --insecure https://:@localhost:9200/_cat/health | grep -ioE 'green|yellow' || echo 'not green/yellow cluster status'
          name: elasticsearch
          ports:
            - containerPort: 9200
            - containerPort: 9300
          resources: {}
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/config
              name: elasticsearch.keystore
            - mountPath: /usr/share/elasticsearch/config
              name: elasticsearch.service_tokens
            - mountPath: /usr/share/elasticsearch/config/certs
              name: elastic.ca
            - mountPath: /usr/share/elasticsearch/config/certs
              name: elasticsearch.certificate
            - mountPath: /usr/share/elasticsearch/config/certs
              name: elasticsearch.key
            - mountPath: /usr/share/elasticsearch/data
              name: elasticsearch-data
            - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              name: elasticsearch-claim1
            - mountPath: /usr/share/elasticsearch/config/log4j2.properties
              name: elasticsearch-claim2
      restartPolicy: Always
      volumes:
        - name: elasticsearch.keystore
          secret:
            items:
              - key: elasticsearch.keystore
                path: elasticsearch.keystore
            secretName: elasticsearch.keystore
        - name: elasticsearch.service_tokens
          secret:
            items:
              - key: elasticsearch.service_tokens
                path: service_tokens
            secretName: elasticsearch.service_tokens
        - name: elastic.ca
          secret:
            items:
              - key: elastic.ca
                path: ca.crt
            secretName: elastic.ca
        - name: elasticsearch.certificate
          secret:
            items:
              - key: elasticsearch.certificate
                path: elasticsearch.crt
            secretName: elasticsearch.certificate
        - name: elasticsearch.key
          secret:
            items:
              - key: elasticsearch.key
                path: elasticsearch.key
            secretName: elasticsearch.key
        - name: elasticsearch-data
          persistentVolumeClaim:
            claimName: elasticsearch-data
        - name: elasticsearch-claim1
          persistentVolumeClaim:
            claimName: elasticsearch-claim1
        - name: elasticsearch-claim2
          persistentVolumeClaim:
            claimName: elasticsearch-claim2
status: {}
